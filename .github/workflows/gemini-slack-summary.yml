name: Gemini Slack Summary

on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 23 * * *'  # 毎日日本時間8時（UTC 23時）

jobs:
  summarize-slack:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Run Gemini Slack Summary
        uses: google-gemini/gemini-cli-action@main
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_TEAM_ID: ${{ secrets.SLACK_TEAM_ID }}
          GEMINI_MODEL: "gemini-2.0-flash-lite"
        with:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          settings_json: |
            {
              "mcpServers": {
                "slack": {
                  "command": "npx",
                  "args": ["-y", "@modelcontextprotocol/server-slack"],
                  "env": {
                    "SLACK_BOT_TOKEN": "$SLACK_BOT_TOKEN",
                    "SLACK_TEAM_ID": "$SLACK_TEAM_ID"
                  }
                }
              },
              "coreTools": [
                "mcp__slack__slack_get_channel_history"
              ]
            }
          prompt: |
            あなたは Slack の要約アシスタントです。
            この処理は定期実行しているためユーザへの確認は不要です。
            Slackのチャンネル `#rss-ios` `#rss-ai` `rss-hotentry` について、それぞれ以下の処理を繰り返してください。
            1. まずチャンネル名からチャンネルIDを特定してください。
            2. 日本時間の昨日の間に投稿されたメッセージを取得してください。
            3. 見つかった内容を短い要約と重要なトピックの箇条書きでまとめてください。特に重要と思われる記事には100文字程度のサマリをつけてください。
            4. リンクを含める場合は Slack のリンク形式 `<URL|リンクテキスト>` を使用してください。
            5. 2でまとめた内容を Slack の `#general` チャンネルに投稿します。
            6. 次のチャンネルに進みます。
